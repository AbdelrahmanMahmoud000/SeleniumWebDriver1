<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-30T16:50:22 EET" name="Default suite" finished-at="2022-11-30T16:50:42 EET" duration-ms="20916">
    <groups>
    </groups>
    <test started-at="2022-11-30T16:50:22 EET" name="Default test" finished-at="2022-11-30T16:50:42 EET" duration-ms="20916">
      <class name="TestPackage.TestClass">
        <test-method is-config="true" signature="beforeMethod_Chrom()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:22 EET" name="beforeMethod_Chrom" finished-at="2022-11-30T16:50:31 EET" duration-ms="9385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_Chrom -->
        <test-method signature="assertThatGoogleLogoIsDisplayed()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:31 EET" name="assertThatGoogleLogoIsDisplayed" finished-at="2022-11-30T16:50:31 EET" duration-ms="81" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img[@alt='Google']"}
  (Session info: chrome=107.0.5304.122)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-I0JQFNG', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1209b26b0459ec23599cef064502495a, findElement {using=xpath, value=//img[@alt='Google']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.122, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\Bedo\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:64998}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64998/devtoo..., se:cdpVersion: 107.0.5304.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1209b26b0459ec23599cef064502495a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img[@alt='Google']"}
  (Session info: chrome=107.0.5304.122)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-I0JQFNG', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1209b26b0459ec23599cef064502495a, findElement {using=xpath, value=//img[@alt='Google']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.122, chrome: {chromedriverVersion: 107.0.5304.62 (1eec40d3a576..., userDataDir: C:\Users\Bedo\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:64998}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64998/devtoo..., se:cdpVersion: 107.0.5304.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1209b26b0459ec23599cef064502495a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at Pages.Home.isGoogleLogoIsDisplayed(Home.java:31)
at TestPackage.TestClass.assertThatGoogleLogoIsDisplayed(TestClass.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertThatGoogleLogoIsDisplayed -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:31 EET" name="afterMethod" finished-at="2022-11-30T16:50:32 EET" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod_Chrom()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:32 EET" name="beforeMethod_Chrom" finished-at="2022-11-30T16:50:35 EET" duration-ms="3184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_Chrom -->
        <test-method signature="assertThatGooglePageTitleIsCorrect()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:35 EET" name="assertThatGooglePageTitleIsCorrect" description="Given I am on the Google Home Page , Then the page title will be &#039;Google&#039;" finished-at="2022-11-30T16:50:35 EET" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertThatGooglePageTitleIsCorrect -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:35 EET" name="afterMethod" finished-at="2022-11-30T16:50:35 EET" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod_Chrom()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:35 EET" name="beforeMethod_Chrom" finished-at="2022-11-30T16:50:38 EET" duration-ms="3003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod_Chrom -->
        <test-method signature="assertThatResultStatNotEmpty()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:38 EET" name="assertThatResultStatNotEmpty" finished-at="2022-11-30T16:50:42 EET" duration-ms="4048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertThatResultStatNotEmpty -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestPackage.TestClass@7ec7ffd3]" started-at="2022-11-30T16:50:42 EET" name="afterMethod" finished-at="2022-11-30T16:50:42 EET" duration-ms="260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestPackage.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
